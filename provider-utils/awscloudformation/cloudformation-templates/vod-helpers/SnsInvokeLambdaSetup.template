Description: 
  "S3 Workflow"

Parameters:
  pS3:
    Type: String
    Description: Store template and lambda package
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9-_]*"
    Default: amazonbooth
  pSourceFolder:
    Type: String
    Description: Store template and lambda package
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9-_]*"
    Default: vod-helpers
  pFunctionName:
    Type: String
    Description: Name of function
    Default: arn-default
  pFunctionHash:
    Type: String
    Description: FunctionHash
    Default: default
  pSnsTopicName:
    Type: String
    Description: FunctionHash
    Default: default


Resources:
  rMediaconvertStatusLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref pFunctionName
      Description: Invoked on MediaConvert status events 
      Handler: index.handler
      Role: !GetAtt rMediaconvertStatusLambdaRole.Arn
      Runtime: nodejs14.x
      Timeout: 30
      Code:
        S3Bucket: !Ref pS3
        S3Key: !Sub
          - vod-helpers/MediaConvertStatusLambda-${hash}.zip
          - { hash: !Ref pFunctionHash }

  rMediaconvertStatusLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: !Sub "${AWS::AccountId}-mediaconvert-status-processing-role"
          PolicyDocument:
            Statement:
               -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Resource:
                  - !Join ["", ["arn:aws:logs:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":log-group:/aws/
               - 
                 Effect: Allow
                 Action:
                   - sns:*
                Resource:
                  - !Join ["", ["arn:aws:sns:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":*"]]
                  
  MediaConvertNotificationsSNS:
    Type: AWS::SNS::Topic
    Properties:
        TopicName: !Ref pSnsTopicName
        Subscription:
        - Endpoint: !GetAtt rMediaconvertStatusLambda.Arn
          Protocol: lambda

  MediaConvertEventsRule:
    Type: AWS::Events::Rule
    Properties:
        Name : "AmplifyVideo-MediaConvertEvents"
        Description: "Event rule for MediaConvert"
        EventPattern: 
            source:
              - aws.mediaconvert
            detail-type:
              - "MediaConvert Job State Change"
        State: ENABLED
        Targets:
            - Arn: !Ref MediaConvertNotificationsSNS
              Id: MediaConvertNotificationsSNS
  
  rSNSLambdaPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref rMediaconvertStatusLambda
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      
  
  rMediaConvertNotificationsSNSPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      Topics:
        - !Ref MediaConvertNotificationsSNS
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 'sns:Publish'
            Resource: !Ref MediaConvertNotificationsSNS
            Principal:
              AWS: '*'
            Condition:
              ArnLike:
                AWS:SourceArn: !Sub 'arn:aws:*:*:${AWS::AccountId}:*'